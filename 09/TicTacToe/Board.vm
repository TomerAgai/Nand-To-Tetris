function Board.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push pointer 0
call Board.draw 1
pop temp 0
push pointer 0
return
function Board.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Board.draw 1
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 4
pop local 0
label WHILE_EXP0
push local 0
push constant 0
gt
not
if-goto WHILE_END0
push this 0
push this 1
push local 0
add
push this 0
push this 2
add
push this 1
push local 0
add
call Screen.drawLine 4
pop temp 0
push this 0
push this 1
push this 2
push constant 3
call Math.divide 2
sub
push local 0
add
push this 0
push this 2
add
push this 1
push this 2
push constant 3
call Math.divide 2
sub
push local 0
add
call Screen.drawLine 4
pop temp 0
push this 0
push this 2
push constant 3
call Math.divide 2
add
push local 0
add
push this 1
push this 2
push constant 3
call Math.divide 2
add
push this 0
push this 2
push constant 3
call Math.divide 2
add
push local 0
add
push this 1
push this 2
push constant 3
call Math.divide 2
push constant 2
call Math.multiply 2
sub
call Screen.drawLine 4
pop temp 0
push this 0
push this 2
push constant 3
call Math.divide 2
push constant 2
call Math.multiply 2
add
push local 0
add
push this 1
push this 2
push constant 3
call Math.divide 2
add
push this 0
push this 2
push constant 3
call Math.divide 2
push constant 2
call Math.multiply 2
add
push local 0
add
push this 1
push this 2
push constant 3
call Math.divide 2
push constant 2
call Math.multiply 2
sub
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.drawCircle 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 2
push constant 6
call Math.divide 2
add
push this 2
push constant 3
call Math.divide 2
push argument 2
call Math.multiply 2
add
push this 1
push this 2
push constant 2
call Math.divide 2
sub
push this 2
push constant 3
call Math.divide 2
push argument 1
call Math.multiply 2
add
push this 2
push constant 12
call Math.divide 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Board.drawCross 5
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 2
push constant 12
call Math.divide 2
add
push this 2
push constant 3
call Math.divide 2
push argument 2
call Math.multiply 2
add
pop local 0
push this 1
push this 2
push constant 12
call Math.divide 2
sub
push this 2
push constant 3
call Math.divide 2
push argument 1
call Math.multiply 2
add
push this 2
push constant 3
call Math.divide 2
sub
pop local 2
push local 0
push this 2
push constant 6
call Math.divide 2
add
pop local 1
push local 2
push this 2
push constant 6
call Math.divide 2
sub
pop local 3
push local 0
push local 2
push local 1
push local 3
call Screen.drawLine 4
pop temp 0
push local 2
pop local 4
push local 3
pop local 2
push local 4
pop local 3
push local 0
push local 2
push local 1
push local 3
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Board.drawNumbers 0
push argument 0
pop pointer 0
push constant 8
push constant 15
call Output.moveCursor 2
pop temp 0
push constant 1
call Output.printInt 1
pop temp 0
push constant 8
push constant 20
call Output.moveCursor 2
pop temp 0
push constant 2
call Output.printInt 1
pop temp 0
push constant 8
push constant 25
call Output.moveCursor 2
pop temp 0
push constant 3
call Output.printInt 1
pop temp 0
push constant 12
push constant 15
call Output.moveCursor 2
pop temp 0
push constant 4
call Output.printInt 1
pop temp 0
push constant 12
push constant 20
call Output.moveCursor 2
pop temp 0
push constant 5
call Output.printInt 1
pop temp 0
push constant 12
push constant 25
call Output.moveCursor 2
pop temp 0
push constant 6
call Output.printInt 1
pop temp 0
push constant 16
push constant 15
call Output.moveCursor 2
pop temp 0
push constant 7
call Output.printInt 1
pop temp 0
push constant 16
push constant 20
call Output.moveCursor 2
pop temp 0
push constant 8
call Output.printInt 1
pop temp 0
push constant 16
push constant 25
call Output.moveCursor 2
pop temp 0
push constant 9
call Output.printInt 1
pop temp 0
push constant 0
return
